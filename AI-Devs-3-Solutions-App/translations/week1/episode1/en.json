{
    "title": "Episode 1 - Robot Login",
    "subtitle": "Task objective:",
    "description": "Log into the robot system and download firmware.",
    "tabs": {
        "requirements": "üìã Requirements",
        "solution": "üí° Solution",
        "task": "üìù Task content"
    },
    "content": {
        "requirements": "Bypass the anti-captcha system by:\n- Getting the current question from the page (changes every 7 seconds)\n- Sending the question to LLM to get an answer\n- Submitting the form with login data and answer",
        "solution": "### Implementation:\n\n1. **Request preparation**\n    - Create HTTP session for server communication\n    - Get login page and extract captcha question\n\n2. **Captcha handling**\n    - Send question to LLM model\n    - Get response and format it according to requirements\n\n3. **Login**\n    - Submit form with login data and captcha answer\n    - Verify server response\n\n4. **Firmware download**\n    - After successful login, download firmware\n    - Save response to file"
    },
    "implementation": {
        "title": "Solution implementation:",
        "description": "The solution automatically performs all steps required to log into the robot system and download the firmware. The program handles the anti-captcha system by using an LLM model to generate answers to questions.",
        "use_cache": "Use cache memory",
        "cache_help": "If checked, the program will use previously saved correct answers",
        "select_model": "Select LLM model:",
        "run_button": "üöÄ Run solution"
    },
    "status": {
        "running": "Running robot login automation...",
        "success": "Task completed successfully!",
        "error": "Task failed!"
    },
    "logs": {
        "page_error": "Failed to get page",
        "question_error": "Failed to get question",
        "question_received": "Received question: {question}",
        "answer_found": "Found answer in memory: {answer}",
        "llm_answer": "LLM answer: {answer}",
        "llm_error": "Failed to get answer from LLM",
        "login_success": "Login successful!",
        "login_error": "Login failed",
        "saving_file": "Saved HTML file: {filename}",
        "downloading_firmware": "Downloading firmware: {version}",
        "flag_found": "Found new flag!"
    },
    "task": {
        "title": "Task objective:",
        "content": "**Task objective:**\n\n1. Log into the robot system and download firmware.\n\n**Requirements:**\n1. Log into the system at xyz.ag3nts.org using credentials:\n   - Login: tester\n   - Password: 574e112a\n\n2. Bypass the anti-captcha system by:\n   - Getting the current question from the page (changes every 7 seconds)\n   - Sending the question to LLM to get an answer\n   - Submitting the form with login data and answer\n\n3. After successful login:\n   - Download robot firmware\n   - Save HTML response"
    }
} 